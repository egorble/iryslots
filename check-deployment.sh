#!/bin/bash

# –ö–æ–º–ø–ª–µ–∫—Å–Ω–∞ –ø–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≥–æ—Ç–æ–≤–Ω–æ—Å—Ç—ñ –¥–µ–ø–ª–æ—é
# –î–æ–º–µ–Ω: iryslots.xyz

GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
BLUE='\033[0;34m'
NC='\033[0m'

DOMAIN="iryslots.xyz"
PROJECT_DIR="/var/www/iryslots"

echo -e "${BLUE}üîç –ö–û–ú–ü–õ–ï–ö–°–ù–ê –ü–ï–†–ï–í–Ü–†–ö–ê –ì–û–¢–û–í–ù–û–°–¢–Ü –°–ò–°–¢–ï–ú–ò${NC}"
echo "=================================================="

# –§—É–Ω–∫—Ü—ñ—ó –¥–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏
check_status() {
    local service=$1
    local description=$2
    
    if systemctl is-active --quiet $service; then
        echo -e "‚úÖ $description: ${GREEN}–ü–†–ê–¶–Æ–Ñ${NC}"
        return 0
    else
        echo -e "‚ùå $description: ${RED}–ù–ï –ü–†–ê–¶–Æ–Ñ${NC}"
        return 1
    fi
}

check_port() {
    local port=$1
    local description=$2
    
    if netstat -tuln | grep -q ":$port "; then
        local process=$(sudo lsof -i :$port 2>/dev/null | tail -n 1 | awk '{print $1}')
        echo -e "‚úÖ –ü–æ—Ä—Ç $port ($description): ${GREEN}–í–Ü–î–ö–†–ò–¢–ò–ô${NC} ($process)"
        return 0
    else
        echo -e "‚ùå –ü–æ—Ä—Ç $port ($description): ${RED}–ó–ê–ö–†–ò–¢–ò–ô${NC}"
        return 1
    fi
}

check_url() {
    local url=$1
    local description=$2
    
    if curl -f -s --connect-timeout 10 "$url" > /dev/null 2>&1; then
        echo -e "‚úÖ $description: ${GREEN}–î–û–°–¢–£–ü–ù–ò–ô${NC}"
        return 0
    else
        echo -e "‚ùå $description: ${RED}–ù–ï–î–û–°–¢–£–ü–ù–ò–ô${NC}"
        return 1
    fi
}

# 1. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω–∏—Ö —Å–µ—Ä–≤—ñ—Å—ñ–≤
echo -e "\n${YELLOW}1. –°–ò–°–¢–ï–ú–ù–Ü –°–ï–†–í–Ü–°–ò${NC}"
echo "------------------------"
check_status nginx "Nginx –≤–µ–±-—Å–µ—Ä–≤–µ—Ä"
check_status iryslots-server "Node.js —Å–µ—Ä–≤–µ—Ä"

# 2. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ—Ä—Ç—ñ–≤
echo -e "\n${YELLOW}2. –ú–ï–†–ï–ñ–ï–í–Ü –ü–û–†–¢–ò${NC}"
echo "------------------------"
check_port 80 "HTTP"
check_port 443 "HTTPS"
check_port 3001 "Node.js API"

# 3. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ DNS
echo -e "\n${YELLOW}3. DNS –ù–ê–õ–ê–®–¢–£–í–ê–ù–ù–Ø${NC}"
echo "------------------------"
SERVER_IP=$(curl -s ifconfig.me 2>/dev/null || echo "–Ω–µ–≤—ñ–¥–æ–º–∏–π")
RESOLVED_IP=$(nslookup $DOMAIN 2>/dev/null | grep "Address" | tail -1 | awk '{print $2}' 2>/dev/null || echo "–Ω–µ–≤—ñ–¥–æ–º–∏–π")

echo "IP —Å–µ—Ä–≤–µ—Ä–∞: $SERVER_IP"
echo "DNS —Ä–µ–∑–æ–ª–≤: $RESOLVED_IP"

if [ "$SERVER_IP" = "$RESOLVED_IP" ]; then
    echo -e "‚úÖ DNS: ${GREEN}–ù–ê–õ–ê–®–¢–û–í–ê–ù–ò–ô –ü–†–ê–í–ò–õ–¨–ù–û${NC}"
else
    echo -e "‚ùå DNS: ${RED}–ù–ï–ü–†–ê–í–ò–õ–¨–ù–û –ù–ê–õ–ê–®–¢–û–í–ê–ù–ò–ô${NC}"
fi

# 4. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –≤–µ–±-–¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—ñ
echo -e "\n${YELLOW}4. –í–ï–ë-–î–û–°–¢–£–ü–ù–Ü–°–¢–¨${NC}"
echo "------------------------"
check_url "http://$DOMAIN" "HTTP —Å–∞–π—Ç"
check_url "https://$DOMAIN" "HTTPS —Å–∞–π—Ç"
check_url "https://$DOMAIN/api/stats" "API endpoint"

# 5. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ SSL —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç–∞
echo -e "\n${YELLOW}5. SSL –°–ï–†–¢–ò–§–Ü–ö–ê–¢${NC}"
echo "------------------------"
if openssl s_client -servername $DOMAIN -connect $DOMAIN:443 </dev/null 2>/dev/null | openssl x509 -noout -dates 2>/dev/null; then
    echo -e "‚úÖ SSL —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç: ${GREEN}–ê–ö–¢–ò–í–ù–ò–ô${NC}"
    echo "–¢–µ—Ä–º—ñ–Ω –¥—ñ—ó:"
    openssl s_client -servername $DOMAIN -connect $DOMAIN:443 </dev/null 2>/dev/null | openssl x509 -noout -dates 2>/dev/null | sed 's/^/   /'
else
    echo -e "‚ùå SSL —Å–µ—Ä—Ç–∏—Ñ—ñ–∫–∞—Ç: ${RED}–ü–†–û–ë–õ–ï–ú–ê${NC}"
fi

# 6. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ñ–∞–π–ª—ñ–≤ –ø—Ä–æ–µ–∫—Ç—É
echo -e "\n${YELLOW}6. –§–ê–ô–õ–ò –ü–†–û–ï–ö–¢–£${NC}"
echo "------------------------"
if [ -f "$PROJECT_DIR/index.html" ]; then
    echo -e "‚úÖ –§—Ä–æ–Ω—Ç–µ–Ω–¥: ${GREEN}–ó–ë–£–î–û–í–ê–ù–ò–ô${NC}"
else
    echo -e "‚ùå –§—Ä–æ–Ω—Ç–µ–Ω–¥: ${RED}–ù–ï –ó–ë–£–î–û–í–ê–ù–ò–ô${NC}"
fi

if [ -f "$PROJECT_DIR/server/server.js" ]; then
    echo -e "‚úÖ –°–µ—Ä–≤–µ—Ä–Ω–∏–π –∫–æ–¥: ${GREEN}–ü–†–ò–°–£–¢–ù–Ü–ô${NC}"
else
    echo -e "‚ùå –°–µ—Ä–≤–µ—Ä–Ω–∏–π –∫–æ–¥: ${RED}–í–Ü–î–°–£–¢–ù–Ü–ô${NC}"
fi

if [ -f "$PROJECT_DIR/.env" ]; then
    echo -e "‚úÖ –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è (.env): ${GREEN}–ü–†–ò–°–£–¢–ù–Ø${NC}"
else
    echo -e "‚ùå –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è (.env): ${RED}–í–Ü–î–°–£–¢–ù–Ø${NC}"
fi

# 7. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ª–æ–≥—ñ–≤
echo -e "\n${YELLOW}7. –õ–û–ì–ò –°–ò–°–¢–ï–ú–ò${NC}"
echo "------------------------"
echo "–û—Å—Ç–∞–Ω–Ω—ñ –ø–æ–º–∏–ª–∫–∏ nginx:"
sudo tail -n 3 /var/log/nginx/error.log 2>/dev/null | sed 's/^/   /' || echo "   –õ–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ"

echo "–°—Ç–∞—Ç—É—Å Node.js —Å–µ—Ä–≤–µ—Ä–∞:"
sudo journalctl -u iryslots-server -n 3 --no-pager 2>/dev/null | sed 's/^/   /' || echo "   –õ–æ–≥–∏ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ñ"

# 8. –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Ä–µ—Å—É—Ä—Å—ñ–≤
echo -e "\n${YELLOW}8. –°–ò–°–¢–ï–ú–ù–Ü –†–ï–°–£–†–°–ò${NC}"
echo "------------------------"
echo "–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –¥–∏—Å–∫—É:"
df -h / | tail -1 | awk '{print "   –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ: " $3 " –∑ " $2 " (" $5 ")"}'

echo "–í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–Ω—è –ø–∞–º'—è—Ç—ñ:"
free -h | grep Mem | awk '{print "   –í–∏–∫–æ—Ä–∏—Å—Ç–∞–Ω–æ: " $3 " –∑ " $2}'

echo "–ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —Å–∏—Å—Ç–µ–º–∏:"
uptime | awk '{print "   " $0}'

# 9. –¢–µ—Å—Ç—É–≤–∞–Ω–Ω—è API
echo -e "\n${YELLOW}9. –¢–ï–°–¢–£–í–ê–ù–ù–Ø API${NC}"
echo "------------------------"
if curl -f -s "https://$DOMAIN/health" > /dev/null 2>&1; then
    echo -e "‚úÖ Health check: ${GREEN}–ü–†–ê–¶–Æ–Ñ${NC}"
    echo "–í—ñ–¥–ø–æ–≤—ñ–¥—å —Å–µ—Ä–≤–µ—Ä–∞:"
    curl -s "https://$DOMAIN/health" | jq . 2>/dev/null | head -10 | sed 's/^/   /' || echo "   JSON –Ω–µ–¥–æ—Å—Ç—É–ø–Ω–∏–π"
else
    echo -e "‚ùå Health check: ${RED}–ù–ï –ü–†–ê–¶–Æ–Ñ${NC}"
fi

# 10. –ü—ñ–¥—Å—É–º–æ–∫
echo -e "\n${BLUE}üìä –ü–Ü–î–°–£–ú–û–ö${NC}"
echo "=================================================="

# –ü—ñ–¥—Ä–∞—Ö—É–Ω–æ–∫ —É—Å–ø—ñ—à–Ω–∏—Ö –ø–µ—Ä–µ–≤—ñ—Ä–æ–∫
TOTAL_CHECKS=0
PASSED_CHECKS=0

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –æ—Å–Ω–æ–≤–Ω–∏—Ö –∫–æ–º–ø–æ–Ω–µ–Ω—Ç—ñ–≤
if systemctl is-active --quiet nginx; then ((PASSED_CHECKS++)); fi; ((TOTAL_CHECKS++))
if systemctl is-active --quiet iryslots-server; then ((PASSED_CHECKS++)); fi; ((TOTAL_CHECKS++))
if curl -f -s "https://$DOMAIN" > /dev/null 2>&1; then ((PASSED_CHECKS++)); fi; ((TOTAL_CHECKS++))
if curl -f -s "https://$DOMAIN/health" > /dev/null 2>&1; then ((PASSED_CHECKS++)); fi; ((TOTAL_CHECKS++))

PERCENTAGE=$((PASSED_CHECKS * 100 / TOTAL_CHECKS))

if [ $PERCENTAGE -ge 75 ]; then
    echo -e "üéâ –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –¥–æ —Ä–æ–±–æ—Ç–∏: ${GREEN}$PASSED_CHECKS/$TOTAL_CHECKS –ø–µ—Ä–µ–≤—ñ—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ ($PERCENTAGE%)${NC}"
    echo -e "${GREEN}‚úÖ –í–∞—à —Å–∞–π—Ç –¥–æ—Å—Ç—É–ø–Ω–∏–π: https://$DOMAIN${NC}"
elif [ $PERCENTAGE -ge 50 ]; then
    echo -e "‚ö†Ô∏è  –°–∏—Å—Ç–µ–º–∞ —á–∞—Å—Ç–∫–æ–≤–æ –≥–æ—Ç–æ–≤–∞: ${YELLOW}$PASSED_CHECKS/$TOTAL_CHECKS –ø–µ—Ä–µ–≤—ñ—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ ($PERCENTAGE%)${NC}"
    echo -e "${YELLOW}–ü–æ—Ç—Ä—ñ–±–Ω—ñ –¥–æ–¥–∞—Ç–∫–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è${NC}"
else
    echo -e "‚ùå –°–∏—Å—Ç–µ–º–∞ –Ω–µ –≥–æ—Ç–æ–≤–∞: ${RED}$PASSED_CHECKS/$TOTAL_CHECKS –ø–µ—Ä–µ–≤—ñ—Ä–æ–∫ –ø—Ä–æ–π–¥–µ–Ω–æ ($PERCENTAGE%)${NC}"
    echo -e "${RED}–ü–æ—Ç—Ä—ñ–±–Ω–µ —Å–µ—Ä–π–æ–∑–Ω–µ –≤—Ç—Ä—É—á–∞–Ω–Ω—è${NC}"
fi

echo -e "\n${YELLOW}üõ†Ô∏è  –ö–û–†–ò–°–ù–Ü –ö–û–ú–ê–ù–î–ò:${NC}"
echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ nginx: sudo systemctl restart nginx"
echo "–ü–µ—Ä–µ–∑–∞–ø—É—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞: sudo systemctl restart iryslots-server"
echo "–ü–µ—Ä–µ–≥–ª—è–¥ –ª–æ–≥—ñ–≤: sudo journalctl -u iryslots-server -f"
echo "–ó–±—ñ—Ä–∫–∞ —Ñ—Ä–æ–Ω—Ç–µ–Ω–¥—É: sudo ./build-frontend.sh"
echo "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ –ø–æ—Ä—Ç—ñ–≤: sudo netstat -tulpn | grep -E ':(80|443|3001)'"