const { ethers } = require('ethers');
const fs = require('fs');
require('dotenv').config();

async function addServerWallets() {
  console.log('üîë –î–æ–¥–∞–≤–∞–Ω–Ω—è —Å–µ—Ä–≤–µ—Ä–Ω–∏—Ö –≥–∞–º–∞–Ω—Ü—ñ–≤ –¥–æ –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É...\n');
  
  try {
    // –ü—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –¥–æ –º–µ—Ä–µ–∂—ñ
    const provider = new ethers.JsonRpcProvider(process.env.IRYS_RPC_URL);
    const ownerWallet = new ethers.Wallet(process.env.PRIVATE_KEY, provider);
    
    console.log('üëõ Owner address:', ownerWallet.address);
    
    // –ó–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è ABI –∫–æ–Ω—Ç—Ä–∞–∫—Ç—É
    const contractABI = JSON.parse(
      fs.readFileSync('./artifacts/SlotMachineBank.abi.json', 'utf8')
    );
    
    const contract = new ethers.Contract(
      process.env.CONTRACT_ADDRESS,
      contractABI,
      ownerWallet
    );
    
    console.log('üìç Contract address:', process.env.CONTRACT_ADDRESS);
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ –ø–æ—Ç–æ—á–Ω—ñ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ –≥–∞–º–∞–Ω—Ü—ñ
    console.log('üìã –ü–æ—Ç–æ—á–Ω—ñ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω—ñ –≥–∞–º–∞–Ω—Ü—ñ:');
    const currentServers = await contract.getAuthorizedServers();
    currentServers.forEach((server, index) => {
      console.log(`   ${index + 1}. ${server}`);
    });
    
    // –ì–∞–º–∞–Ω—Ü—ñ –¥–ª—è –¥–æ–¥–∞–≤–∞–Ω–Ω—è
    const walletsToAdd = [
      {
        name: 'SERVER_WALLET_2',
        key: process.env.SERVER_WALLET_KEY_2
      },
      {
        name: 'SERVER_WALLET_3', 
        key: process.env.SERVER_WALLET_KEY_3
      },
      {
        name: 'SERVER_WALLET_4',
        key: process.env.SERVER_WALLET_KEY_4
      }
    ];
    
    console.log('\nüöÄ –î–æ–¥–∞–≤–∞–Ω–Ω—è –Ω–æ–≤–∏—Ö —Å–µ—Ä–≤–µ—Ä–Ω–∏—Ö –≥–∞–º–∞–Ω—Ü—ñ–≤...');
    
    for (const walletInfo of walletsToAdd) {
      if (!walletInfo.key) {
        console.log(`‚ö†Ô∏è  ${walletInfo.name}: –ø—Ä–∏–≤–∞—Ç–Ω–∏–π –∫–ª—é—á –Ω–µ –≤—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–π, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ`);
        continue;
      }
      
      try {
        const wallet = new ethers.Wallet(walletInfo.key);
        const walletAddress = wallet.address;
        
        console.log(`\nüîÑ –î–æ–¥–∞–≤–∞–Ω–Ω—è ${walletInfo.name} (${walletAddress})...`);
        
        // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ, —á–∏ –≤–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π
        const isAlreadyAuthorized = await contract.isAuthorizedServer(walletAddress);
        if (isAlreadyAuthorized) {
          console.log(`   ‚úÖ –í–∂–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏–π, –ø—Ä–æ–ø—É—Å–∫–∞—î–º–æ`);
          continue;
        }
        
        // –î–æ–¥–∞—î–º–æ –≥–∞–º–∞–Ω–µ—Ü—å
        const tx = await contract.addServerWallet(walletAddress);
        console.log(`   ‚è≥ –û—á—ñ–∫—É–≤–∞–Ω–Ω—è –ø—ñ–¥—Ç–≤–µ—Ä–¥–∂–µ–Ω–Ω—è —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó...`);
        console.log(`   üîó –•–µ—à —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó: ${tx.hash}`);
        
        await tx.wait();
        console.log(`   ‚úÖ ${walletInfo.name} —É—Å–ø—ñ—à–Ω–æ –¥–æ–¥–∞–Ω–æ!`);
        
      } catch (error) {
        console.log(`   ‚ùå –ü–æ–º–∏–ª–∫–∞ –¥–æ–¥–∞–≤–∞–Ω–Ω—è ${walletInfo.name}: ${error.message}`);
      }
    }
    
    // –ü–µ—Ä–µ–≤—ñ—Ä—è—î–º–æ —Ñ—ñ–Ω–∞–ª—å–Ω–∏–π —Å–ø–∏—Å–æ–∫
    console.log('\nüìã –§—ñ–Ω–∞–ª—å–Ω–∏–π —Å–ø–∏—Å–æ–∫ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–∏—Ö –≥–∞–º–∞–Ω—Ü—ñ–≤:');
    const finalServers = await contract.getAuthorizedServers();
    finalServers.forEach((server, index) => {
      console.log(`   ${index + 1}. ${server}`);
    });
    
    console.log(`\n‚úÖ –ó–∞–≥–∞–ª–æ–º –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–æ ${finalServers.length} —Å–µ—Ä–≤–µ—Ä–Ω–∏—Ö –≥–∞–º–∞–Ω—Ü—ñ–≤`);
    console.log('üéâ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –∑–∞–≤–µ—Ä—à–µ–Ω–æ! –¢–µ–ø–µ—Ä –≤—Å—ñ –≥–∞–º–∞–Ω—Ü—ñ –º–æ–∂—É—Ç—å –≤–∏–∫–æ–Ω—É–≤–∞—Ç–∏ —Ç—Ä–∞–Ω–∑–∞–∫—Ü—ñ—ó.');
    
  } catch (error) {
    console.error('‚ùå –ü–æ–º–∏–ª–∫–∞:', error.message);
    process.exit(1);
  }
}

// –ó–∞–ø—É—Å–∫
addServerWallets();