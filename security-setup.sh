#!/bin/bash

# –î–æ–¥–∞—Ç–∫–æ–≤—ñ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–µ–∑–ø–µ–∫–∏ –¥–ª—è —Å–µ—Ä–≤–µ—Ä–∞
# –î–æ–º–µ–Ω: iryslots.xyz

set -e

GREEN='\033[0;32m'
YELLOW='\033[1;33m'
RED='\033[0;31m'
NC='\033[0m'

log() {
    echo -e "${GREEN}[$(date +'%Y-%m-%d %H:%M:%S')] $1${NC}"
}

warning() {
    echo -e "${YELLOW}[WARNING] $1${NC}"
}

error() {
    echo -e "${RED}[ERROR] $1${NC}"
}

DOMAIN="iryslots.xyz"

log "üîí –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –¥–æ–¥–∞—Ç–∫–æ–≤–æ—ó –±–µ–∑–ø–µ–∫–∏ —Å–µ—Ä–≤–µ—Ä–∞..."

# –í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è fail2ban
log "–í—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–Ω—è fail2ban..."
apt install -y fail2ban

# –ö–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—è fail2ban –¥–ª—è nginx
cat > /etc/fail2ban/jail.local << EOF
[DEFAULT]
bantime = 3600
findtime = 600
maxretry = 5

[nginx-http-auth]
enabled = true

[nginx-noscript]
enabled = true

[nginx-badbots]
enabled = true

[nginx-noproxy]
enabled = true

[nginx-limit-req]
enabled = true
port = http,https
filter = nginx-limit-req
logpath = /var/log/nginx/error.log
maxretry = 10
EOF

systemctl enable fail2ban
systemctl restart fail2ban

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –ª–æ–≥—Ä–æ—Çate –¥–ª—è nginx
log "–ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —Ä–æ—Ç–∞—Ü—ñ—ó –ª–æ–≥—ñ–≤..."
cat > /etc/logrotate.d/nginx << EOF
/var/log/nginx/*.log {
    daily
    missingok
    rotate 52
    compress
    delaycompress
    notifempty
    create 644 www-data adm
    sharedscripts
    prerotate
        if [ -d /etc/logrotate.d/httpd-prerotate ]; then \
            run-parts /etc/logrotate.d/httpd-prerotate; \
        fi \
    endprerotate
    postrotate
        invoke-rc.d nginx rotate >/dev/null 2>&1
    endscript
}
EOF

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É
log "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–∫—Ä–∏–ø—Ç–∞ –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É..."
cat > /usr/local/bin/monitor-iryslots.sh << 'EOF'
#!/bin/bash

DOMAIN="iryslots.xyz"
EMAIL="egor4042007@gmail.com"
LOG_FILE="/var/log/iryslots-monitor.log"

check_service() {
    local service=$1
    if ! systemctl is-active --quiet $service; then
        echo "$(date): $service is down, attempting restart..." >> $LOG_FILE
        systemctl restart $service
        if systemctl is-active --quiet $service; then
            echo "$(date): $service restarted successfully" >> $LOG_FILE
        else
            echo "$(date): Failed to restart $service" >> $LOG_FILE
            # –¢—É—Ç –º–æ–∂–Ω–∞ –¥–æ–¥–∞—Ç–∏ –≤—ñ–¥–ø—Ä–∞–≤–∫—É email –∞–±–æ Telegram –ø–æ–≤—ñ–¥–æ–º–ª–µ–Ω–Ω—è
        fi
    fi
}

check_website() {
    if ! curl -f -s https://$DOMAIN > /dev/null; then
        echo "$(date): Website $DOMAIN is not responding" >> $LOG_FILE
        # –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ nginx
        check_service nginx
    fi
}

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ —Å–µ—Ä–≤—ñ—Å—ñ–≤
check_service nginx
check_website

# –ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ PM2 –ø—Ä–æ—Ü–µ—Å—ñ–≤
if command -v pm2 &> /dev/null; then
    if ! pm2 list | grep -q "online"; then
        echo "$(date): PM2 processes are down, attempting restart..." >> $LOG_FILE
        pm2 restart all
    fi
fi

# –û—á–∏—â–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö –ª–æ–≥—ñ–≤ (—Å—Ç–∞—Ä—à–µ 30 –¥–Ω—ñ–≤)
find /var/log -name "*.log" -type f -mtime +30 -delete 2>/dev/null || true
EOF

chmod +x /usr/local/bin/monitor-iryslots.sh

# –î–æ–¥–∞–≤–∞–Ω–Ω—è –¥–æ crontab
log "–î–æ–¥–∞–≤–∞–Ω–Ω—è –º–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥—É –¥–æ crontab..."
(crontab -l 2>/dev/null; echo "*/5 * * * * /usr/local/bin/monitor-iryslots.sh") | crontab -

# –°—Ç–≤–æ—Ä–µ–Ω–Ω—è backup —Å–∫—Ä–∏–ø—Ç–∞
log "–°—Ç–≤–æ—Ä–µ–Ω–Ω—è —Å–∫—Ä–∏–ø—Ç–∞ –¥–ª—è backup..."
cat > /usr/local/bin/backup-iryslots.sh << 'EOF'
#!/bin/bash

BACKUP_DIR="/var/backups/iryslots"
PROJECT_DIR="/var/www/iryslots"
DATE=$(date +%Y%m%d_%H%M%S)

mkdir -p $BACKUP_DIR

# Backup —Ñ–∞–π–ª—ñ–≤ –ø—Ä–æ–µ–∫—Ç—É
tar -czf $BACKUP_DIR/iryslots_files_$DATE.tar.gz -C /var/www iryslots

# Backup nginx –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó
cp /etc/nginx/sites-available/iryslots $BACKUP_DIR/nginx_config_$DATE

# –í–∏–¥–∞–ª–µ–Ω–Ω—è —Å—Ç–∞—Ä–∏—Ö backup'—ñ–≤ (—Å—Ç–∞—Ä—à–µ 7 –¥–Ω—ñ–≤)
find $BACKUP_DIR -name "*.tar.gz" -type f -mtime +7 -delete
find $BACKUP_DIR -name "nginx_config_*" -type f -mtime +7 -delete

echo "$(date): Backup completed successfully" >> /var/log/iryslots-backup.log
EOF

chmod +x /usr/local/bin/backup-iryslots.sh

# –î–æ–¥–∞–≤–∞–Ω–Ω—è backup –¥–æ crontab (—â–æ–¥–µ–Ω–Ω–æ –æ 2:00)
(crontab -l 2>/dev/null; echo "0 2 * * * /usr/local/bin/backup-iryslots.sh") | crontab -

# –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è SSH –±–µ–∑–ø–µ–∫–∏ (—è–∫—â–æ –ø–æ—Ç—Ä—ñ–±–Ω–æ)
log "–ü–µ—Ä–µ–≤—ñ—Ä–∫–∞ SSH –∫–æ–Ω—Ñ—ñ–≥—É—Ä–∞—Ü—ñ—ó..."
if grep -q "PermitRootLogin yes" /etc/ssh/sshd_config; then
    warning "–†–µ–∫–æ–º–µ–Ω–¥—É—î—Ç—å—Å—è –≤—ñ–¥–∫–ª—é—á–∏—Ç–∏ root login —á–µ—Ä–µ–∑ SSH"
    echo "–î–ª—è –≤—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è –≤–∏–∫–æ–Ω–∞–π—Ç–µ:"
    echo "sed -i 's/PermitRootLogin yes/PermitRootLogin no/' /etc/ssh/sshd_config"
    echo "systemctl restart ssh"
fi

# –ü–æ–∫–∞–∑ —ñ–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—ó –ø—Ä–æ DNS
log "üìã –Ü–Ω—Ñ–æ—Ä–º–∞—Ü—ñ—è –ø—Ä–æ DNS –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è:"
echo -e "${YELLOW}–î–æ–¥–∞–π—Ç–µ –Ω–∞—Å—Ç—É–ø–Ω—ñ DNS –∑–∞–ø–∏—Å–∏ —É –≤–∞—à–æ–≥–æ –ø—Ä–æ–≤–∞–π–¥–µ—Ä–∞ –¥–æ–º–µ–Ω—É:${NC}"
echo "A –∑–∞–ø–∏—Å:     $DOMAIN        -> IP_–ê–î–†–ï–°–ê_–°–ï–†–í–ï–†–ê"
echo "A –∑–∞–ø–∏—Å:     www.$DOMAIN    -> IP_–ê–î–†–ï–°–ê_–°–ï–†–í–ï–†–ê"
echo ""
echo "–î–ª—è –ø–µ—Ä–µ–≤—ñ—Ä–∫–∏ DNS –≤–∏–∫–æ—Ä–∏—Å—Ç–æ–≤—É–π—Ç–µ:"
echo "nslookup $DOMAIN"
echo "dig $DOMAIN"

log "‚úÖ –ù–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è –±–µ–∑–ø–µ–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!"
echo -e "${GREEN}–°—Ç–≤–æ—Ä–µ–Ω—ñ —Å–µ—Ä–≤—ñ—Å–∏:${NC}"
echo "- fail2ban –¥–ª—è –∑–∞—Ö–∏—Å—Ç—É –≤—ñ–¥ –∞—Ç–∞–∫"
echo "- –ú–æ–Ω—ñ—Ç–æ—Ä–∏–Ω–≥ —Å–µ—Ä–≤—ñ—Å—ñ–≤ –∫–æ–∂–Ω—ñ 5 —Ö–≤–∏–ª–∏–Ω"
echo "- –©–æ–¥–µ–Ω–Ω–∏–π backup –æ 2:00"
echo "- –†–æ—Ç–∞—Ü—ñ—è –ª–æ–≥—ñ–≤"